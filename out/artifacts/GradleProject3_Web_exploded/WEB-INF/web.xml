<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <!--配置需要加载的spring配置文件，这些文件中的配置的类都是被<context:component-scan>扫描到的，比如@Repository @Component
        @Service @Controller等-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:data-access-applicationContext.xml;classpath:spring-security.xml;classpath:service-applicationContext.xml</param-value>
    </context-param>
    <!--配置日志监听 ，如果配置文件报红，没有关系可以正常运行，这个与idea的验证规则有关-->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--配置权限过滤器，注意必须配置在springmvc 之前，因为对用户访问资源的权限判断与控制是在访问特定url之前发生的-->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 配置字符编码过滤器  必须配置在所有过滤器的最前面 -->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--超级管理员 -->
    <!-- <filter>
          <filter-name>superAdminFilter</filter-name>
          <filter-class>com.fxmms.filter.SuperAdminFilter</filter-class>
      </filter>
      <filter-mapping>
          <filter-name>superAdminFilter</filter-name>
          <url-pattern>/fxmms/superadmin/*</url-pattern>
      </filter-mapping>

      <filter>
          <filter-name>adminFilter</filter-name>
          <filter-class>com.fxmms.filter.AdminFilter</filter-class>
      </filter>
      <filter-mapping>
          <filter-name>adminFilter</filter-name>
          <url-pattern>/fxmms/admin/*</url-pattern>
      </filter-mapping>

      <filter>
          <filter-name>customerFilter</filter-name>
          <filter-class>com.fxmms.filter.CustomerFilter</filter-class>
      </filter>
      <filter-mapping>
          <filter-name>customerFilter</filter-name>
          <url-pattern>/fxmms/customer/*</url-pattern>
      </filter-mapping>

      <servlet>
          <servlet-name>LoginServlet</servlet-name>
          <servlet-class>com.fxmms.servlet.LoginServlet</servlet-class>
      </servlet>
      <servlet>
          <servlet-name>InvalidateServlet</servlet-name>
          <servlet-class>com.fxmms.servlet.InvalidateServlet</servlet-class>
      </servlet>-

      <servlet-mapping>
          <servlet-name>LoginServlet</servlet-name>
          <url-pattern>/loginServlet</url-pattern>
      </servlet-mapping>
      <servlet-mapping>
      <servlet-name>InvalidateServlet</servlet-name>
      <url-pattern>/invalidateServlet</url-pattern>
      </servlet-mapping>-->

    <!-- 配置看可以把POST请求转为PUT，DELETE请求的Filter -->
    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--配置中央控制器，对所有请求进行拦截并做请求路径，与处理请求桩模块之间的映射-->
    <servlet>
        <servlet-name>defaultDispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation
            </param-name>
            <param-value>classpath:default-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!--这里是拦截所有-->
    <servlet-mapping>
        <servlet-name>defaultDispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>

